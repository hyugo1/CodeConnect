/* src/Components/blocks/block.css */

:root {
  --blk-less-content-width: 220px;
  --blk-conditional-width: 320px;
  --blk-bg: #f7f9fc;
  --blk-border: #777;
  --blk-selected-bg: #c8dbfb;
  --blk-selected-border: rgba(239, 98, 175, 1);
  --blk-replacement-bg: rgb(255, 251, 21);
  --blk-handle-bg: #a3c6ff;
  --blk-shadow: rgba(0, 0, 0, 0.1);
  --blk-transition-time: 0.3s;
  --blk-operand-width: 110px;
  --blk-operator-width: 60px;
  --blk-font-family: 'Noto Sans', sans-serif;
}

.block-container {
  width: var(--blk-less-content-width);
  padding: 12px;
  margin-bottom: 12px;
  border: 1px solid var(--blk-border);
  border-radius: 8px;
  background-color: var(--blk-bg);
  box-shadow: 0 4px 8px var(--blk-shadow);
  transition:
    background-color var(--blk-transition-time),
    border-color var(--blk-transition-time),
    box-shadow var(--blk-transition-time),
    transform var(--blk-transition-time);
  font-family: var(--blk-font-family);
  font-weight: bold;
  text-align: center;
  position: relative;
  z-index: 2;
  overflow: visible;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.block-container:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 12px var(--blk-shadow);
}

/* Selected State with Animated Dotted Border */
.block-container.selected {
  box-shadow: 0 8px 16px var(--blk-shadow);
  position: relative;
}

.block-container.selected::before {
  content: "";
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border-radius: inherit;
  pointer-events: none;
  background-image:
    linear-gradient(90deg, var(--blk-selected-border) 50%, transparent 50%),
    linear-gradient(90deg, var(--blk-selected-border) 50%, transparent 50%),
    linear-gradient(0deg,  var(--blk-selected-border) 50%, transparent 50%),
    linear-gradient(0deg,  var(--blk-selected-border) 50%, transparent 50%);
  background-repeat: repeat-x, repeat-x, repeat-y, repeat-y;
  background-size: 15px 3px, 15px 3px, 3px 15px, 3px 15px;
  background-position: left top, right bottom, left bottom, right top;
  animation: border-dance 0.4s infinite linear;
}

@keyframes border-dance {
  from {
    background-position: 0 0, 0 0, 0 0, 0 0;
  }
  to {
    background-position: 8px 8px, 8px 8px, 8px 8px, 8px 8px;
  }
}

.start-block { background-color: #d3f9d8; }
.end-block   { background-color: #f9d8d8; }
.if-block    { background-color: #d8d8f9; }
.whileStart-block { background-color: #f9f7d8; }
.input-block  { background-color: #f0def0; }
.output-block { background-color: #ffeeba; }
.createVariable-block { background-color: #e0e0e0; }
.updateVariable-block { background-color: #e0f7fa; }
.move-block   { background-color: #dcedc8; }
.rotate-block { background-color: #f8ffb0; }
.dummy-block {
  min-height: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 240px;
}

.block-container.if-block,
.block-container.whileStart-block {
  width: var(--blk-conditional-width);
}

.join-block .block-header {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* keep text color unchanged in dark mode */
.dark-mode .block-container {
  color: rgb(25, 26, 30);
}

/* handle buttons */
.dark-mode .help-button {
  position: absolute;
  top: 4px;
  left: 4px;
  background: transparent;
  border: none;
  cursor: pointer;
  font-size: 18px;
}

.handle-target-circle,
.handle-source-square {
  width: 14px;
  height: 14px;
  cursor: pointer;
  position: absolute;
  z-index: -1;
  transition: background-color var(--blk-transition-time), border-color var(--blk-transition-time);
}

.handle-target-circle {
  background: #65a0ff;
  left: 50%;
  top: 0;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  border: 1px solid #555;
}
.handle-target-circle:hover {
  border-color: var(--blk-handle-bg);
}

.handle-source-square {
  background: #65a0ff;
  left: 50%;
  transform: translate(-50%, 0);
  border-radius: 3px;
  border: 1px solid #555;
}
.handle-source-square:hover {
  background-color: var(--blk-handle-bg);
}

/* inputs, operators, etc. */
.block-input {
  width: 100%;
  margin-top: 10px;
  padding: 6px;
  border-radius: 4px;
  border: 1px solid #ccc;
  font-size: 16px;
  box-sizing: border-box;
  transition: border-color var(--blk-transition-time);
  text-align: center;
}
.block-input:focus {
  outline: none;
  border-color: var(--blk-selected-border);
}

.operand-input {
  width: var(--blk-operand-width);
  padding: 5px;
  border-radius: 3px;
  border: 1px solid #ccc;
  font-size: 16px;
  text-align: center;
  margin-right: 5px;
}

.operator-select {
  width: var(--blk-operator-width);
  padding: 5px;
  border-radius: 3px;
  border: 1px solid #ccc;
  font-size: 16px;
  text-align: center;
  margin-right: 5px;
}

.operator-input-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 10px;
}
.operator-input-wrapper select,
.operator-input-wrapper input {
  display: inline-block;
  vertical-align: middle;
  padding: 6px;
  font-size: 16px;
  line-height: 1.2;
  border-radius: 4px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  text-align: center;
  margin-top: 0;
}
.operator-input-wrapper select {
  width: var(--blk-operator-width);
}
.operator-input-wrapper .block-input {
  width: 100%;
}

.createVariable-input-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 10px;
  gap: 4px;
}
.createVariable-input-wrapper .set-label,
.createVariable-input-wrapper .to-label {
  font-weight: bold;
  white-space: nowrap;
}
.createVariable-input-wrapper .operand-input {
  width: 73px;
}

.condition-container {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 10px;
}

.help-button {
  position: absolute;
  top: 5px;
  left: 2px;
  background: transparent;
  border: none;
  cursor: pointer;
  font-size: 18px;
  color: #555;
  transition: color var(--blk-transition-time), transform var(--blk-transition-time);
}
.help-button:hover {
  animation: helpBounce 0.6s ease forwards;
  color: var(--blk-selected-border);
}
@keyframes helpBounce {
  0%   { transform: translateY(0); }
  25%  { transform: translateY(-4px) scale(1.05); }
  50%  { transform: translateY(0)    scale(1); }
  75%  { transform: translateY(-2px) scale(1.02); }
  100% { transform: translateY(0); }
}

.block-icon {
  margin-bottom: 5px;
}

.toggle-type-button {
  position: absolute;
  top: 5px;
  right: 5px;
  background: #ddd;
  border: 1px solid #aaa;
  border-radius: 3px;
  padding: 2px 5px;
  cursor: pointer;
}

.block-container.executing {
  animation: blockPulse 0.5s ease-out;
}
@keyframes blockPulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(239, 98, 175, 0.7);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 10px 5px rgba(239, 98, 175, 0.5);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(239, 98, 175, 0.7);
  }
}

@keyframes edgePulse {
  0% { stroke-width: 3; opacity: 1; }
  50% { stroke-width: 5; opacity: 0.4; }
  100% { stroke-width: 3; opacity: 1; }
}

.react-flow__edges {
  z-index: 1000;
}

/* Dummy block animations */
@keyframes pulse {
  0%   { box-shadow: 0 0 0 0 rgba(0, 255, 0, 0.7); }
  70%  { box-shadow: 0 0 0 10px rgba(44, 188, 44, 0); }
  100% { box-shadow: 0 0 0 0 rgba(0, 255, 0, 0); }
}
.dummy-replaceable { animation: pulse 2s infinite; }
.dummy-fixed      { border: 2px solid var(--blk-selected-border); }

/* Replacement flash */
@keyframes flash {
  0%   { background-color: transparent; transform: scale(1); }
  50%  { background-color: var(--blk-replacement-bg); transform: scale(1.2); }
  100% { background-color: transparent; transform: scale(1); }
}
.replacement-success {
  animation: flash 1s ease-out forwards;
  transform-origin: center center;
}