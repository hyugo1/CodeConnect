:root {
  --less-content-width: 220px;
  --conditional-width: 320px;
  --block-bg: #f5f5f5;
  --block-border: #777;
  --block-selected-bg: #e7f0ff;
  --block-selected-border: #007bff;
  --block-shadow: rgba(0, 0, 0, 0.3);
  --transition-time: 0.3s;
  --operand-width: 108px;
  --operator-width: 60px;
}

/* Base block container style */
.block-container {
  width: var(--less-content-width);
  padding: 12px;
  border: 2px solid var(--block-border);
  border-radius: 8px;
  position: relative;
  text-align: center;
  font-weight: 600;
  background-color: var(--block-bg);
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 12px;
  transition: 
    background-color var(--transition-time),
    border-color var(--transition-time),
    box-shadow var(--transition-time),
    transform var(--transition-time);
  box-shadow: 0 4px 8px var(--block-shadow);
  z-index: 2;
  overflow: visible;
}

.block-container:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 12px var(--block-shadow);
}

.block-container.selected {
  border-color: var(--block-selected-border);
  background-color: var(--block-selected-bg);
  box-shadow: 0 8px 16px var(--block-shadow);
}

/* Conditional blocks (with extra content) override the width */
.if-block,
.while-start-block {
  width: var(--conditional-width);
}

/* Standard input styles */
.block-input {
  width: 100%;
  margin-top: 10px;
  padding: 6px;
  border-radius: 4px;
  border: 1px solid #ccc;
  font-size: 16px;
  box-sizing: border-box;
  transition: border-color 0.3s;
}

.block-input:focus {
  outline: none;
  border-color: var(--block-selected-border);
}

/* Specific input styles for operands and operators */
.operand-input {
  width: var(--operand-width);
  padding: 5px;
  border-radius: 3px;
  border: 1px solid #ccc;
  font-size: 16px;
  text-align: center;
  margin-right: 5px;
}

.operator-select {
  width: var(--operator-width);
  padding: 5px;
  border-radius: 3px;
  border: 1px solid #ccc;
  font-size: 16px;
  text-align: center;
  margin-right: 5px;
}

.condition-container {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 10px;
}

/* Base styles for connection handles */
.handle-target-circle,
.handle-source-square {
  width: 14px;
  height: 14px;
  cursor: pointer;
  position: absolute;
  z-index: 1;
  transition: background-color 0.3s, border-color 0.3s;
}

/* Style for target handle */
.handle-target-circle {
  background: transparent;
  left: 50%;
  top: 0;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  border: 2px solid #555;
}

.handle-target-circle:hover {
  border-color: var(--block-selected-border);
}

/* Style for source handle */
.handle-source-square {
  background: #555;
  left: 50%;
  transform: translate(-50%, 0);
  border-radius: 3px;
}

.handle-source-square:hover {
  background-color: var(--block-selected-border);
}

/* For blocks with less content (e.g., Start, End, Print, Set Variable, Change Variable, Move, Dummy, etc.) */
.start-block .handle-source-square,
.end-block .handle-source-square,
.print-block .handle-source-square,
.set-variable-block .handle-source-square,
.change-variable .handle-source-square,
.move-block .handle-source-square,
.dummy-block .handle-source-square {
  margin-top: 20px;
}

/* For conditional/extra content blocks (e.g., If and While) */
.if-block .handle-source-square,
.while-start-block .handle-source-square {
  margin-bottom: 20px;
}

/* Executing state animation */
.block-container.executing {
  animation: blockPulse 0.5s ease-out;
}

@keyframes blockPulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(255, 0, 0, 0.7);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 10px 5px rgba(255, 0, 0, 0.5);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(255, 0, 0, 0.7);
  }
}

/* Additional edge styles for react-flow (if applicable) */
.react-flow__edge-path {
  transition: stroke 0.4s ease, stroke-width 0.4s ease;
  stroke: #22ff77;
  z-index: 1000;
}

.react-flow__edge-path.selected {
  stroke: #22ff77 !important;
}

.react-flow__edge-path.hovered {
  stroke: #22ff77 !important;
  stroke-width: 5 !important;
  cursor: pointer;
}

.react-flow__edge-path:hover {
  cursor: pointer;
}

.react-flow__edge-path.executing {
  animation: edgePulse 0.4s ease-in-out infinite;
}

@keyframes edgePulse {
  0% {
    stroke-width: 3;
    opacity: 1;
  }
  50% {
    stroke-width: 5;
    opacity: 0.4;
  }
  100% {
    stroke-width: 3;
    opacity: 1;
  }
}

.react-flow__edges {
  z-index: 1000;
}